// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RadioScheduler.Utils;

#nullable disable

namespace RadioScheduler.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("RadioScheduler.Models.RadioHost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("first_name");

                    b.Property<bool>("IsGuest")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_guest");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("last_name");

                    b.HasKey("Id");

                    b.ToTable("global_radio_host", (string)null);
                });

            modelBuilder.Entity("RadioScheduler.Models.RadioShow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<int>("DurationMin")
                        .HasColumnType("INTEGER")
                        .HasColumnName("duration_min");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("global_radio_show", (string)null);
                });

            modelBuilder.Entity("RadioScheduler.Models.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<int>("Month")
                        .HasColumnType("INTEGER")
                        .HasColumnName("month");

                    b.PrimitiveCollection<string>("TableauIds")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("tableau_ids");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("global_schedule", (string)null);
                });

            modelBuilder.Entity("RadioScheduler.Models.Studio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<decimal>("BookingPrice")
                        .HasColumnType("TEXT")
                        .HasColumnName("booking_price");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("capacity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("global_studio", (string)null);
                });

            modelBuilder.Entity("RadioScheduler.Models.Tableau", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("TEXT")
                        .HasColumnName("schedule_id");

                    b.HasKey("Id");

                    b.ToTable("tableau");
                });

            modelBuilder.Entity("RadioScheduler.Models.Timeslot", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("end_time");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("start_time");

                    b.Property<Guid>("TableauId")
                        .HasColumnType("TEXT")
                        .HasColumnName("tableau_id");

                    b.HasKey("Id");

                    b.HasIndex("TableauId");

                    b.ToTable("timeslot");
                });

            modelBuilder.Entity("timeslot_host", b =>
                {
                    b.Property<Guid>("host_id")
                        .HasColumnType("TEXT")
                        .HasColumnName("host_id");

                    b.Property<Guid>("timeslot_id")
                        .HasColumnType("TEXT")
                        .HasColumnName("timeslot_id");

                    b.HasKey("host_id", "timeslot_id");

                    b.HasIndex("timeslot_id");

                    b.ToTable("timeslot_host");
                });

            modelBuilder.Entity("RadioScheduler.Models.Timeslot", b =>
                {
                    b.HasOne("RadioScheduler.Models.RadioShow", "RadioShow")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadioScheduler.Models.Studio", "Studio")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadioScheduler.Models.Tableau", null)
                        .WithMany("Timeslots")
                        .HasForeignKey("TableauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RadioShow");

                    b.Navigation("Studio");
                });

            modelBuilder.Entity("timeslot_host", b =>
                {
                    b.HasOne("RadioScheduler.Models.RadioHost", null)
                        .WithMany()
                        .HasForeignKey("host_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RadioScheduler.Models.Timeslot", null)
                        .WithMany()
                        .HasForeignKey("timeslot_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RadioScheduler.Models.Tableau", b =>
                {
                    b.Navigation("Timeslots");
                });
#pragma warning restore 612, 618
        }
    }
}
